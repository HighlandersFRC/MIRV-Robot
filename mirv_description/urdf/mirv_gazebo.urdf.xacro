<?xml version="1.0"?>
<robot name="mirv" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Large parts of this file were taken from the audibot library: https://github.com/robustify/audibot -->
  <!-- BSD 2-Clause License

  Copyright (c) 2018, Micho Radovnikovich
  All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.

  * Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. -->

<!--  Also the sensors are from this library: https://github.com/Hlwy/gazebo_sensor_collection (No license) -->

       <!-- ====================================================
          Include other sensors and functions for vehicle components
     ========================================================= -->
  <xacro:include filename="$(find mirv_description)/urdf/all_sensors.urdf.xacro" />
  <xacro:include filename="$(find mirv_description)/urdf/dd_controller.urdf.xacro" />
  <xacro:include filename="$(find mirv_description)/urdf/wheel.urdf.xacro" />

     <!-- ====================================================
          Define vehicle properties
     ========================================================= -->
  <xacro:property name="half_track_width" value="0.25" />
  <xacro:property name="half_wheelbase" value="0.15" />

  <xacro:property name="wheel_radius" value="0.1" />
  <xacro:property name="wheel_thickness" value="0.0508" />
  <xacro:property name="wheel_mass" value="0.5" />

  <xacro:property name="body_mass" value="25" />
  <xacro:property name="body_width" value="${2*half_track_width}" />
  <xacro:property name="body_depth" value="${2*half_wheelbase + 0.2}" />
  <xacro:property name="body_length" value="0.3" />

  <xacro:arg name="pub_tf" default="true" />
  <xacro:arg name="robot_name" default="mirv" />

  <xacro:property name="robot_name_prop" value="$(arg robot_name)" />

<!--  <gazebo>-->
<!--    &lt;!&ndash; Publish current joint angles &ndash;&gt;-->
<!--    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">-->
<!--        <xacro:if value="${robot_name_prop != ''}" >-->
<!--          <robotNamespace>$(arg robot_name)</robotNamespace>-->
<!--        </xacro:if>-->
<!--        <jointName>-->
<!--            wheel_fl, wheel_fr, wheel_rl, wheel_rr-->
<!--        </jointName>-->
<!--        <updateRate>100</updateRate>-->
<!--        <alwaysOn>true</alwaysOn>-->
<!--    </plugin>-->
<!--  </gazebo>-->

  <link name="base_footprint"/>

  <link name="base_link">
    <visual>
      <origin xyz="0.0 0.0 0.225" rpy="0 0 0"/>
      <geometry>
        <box size="0.6 0.45 0.30"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin xyz="0.3 0.0 0.225" rpy="0 0 0"/>
      <geometry>
        <box size="0.45 0.60 0.30"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${body_mass}"/>
      <inertia ixx="${body_mass/12 * (body_width*body_width + body_length*body_length)}" ixy="0" ixz="0" iyy="${body_mass/12 * (body_length*body_length + body_depth*body_depth)}" iyz="0" izz="${body_mass/12 * (body_width*body_width + body_depth*body_depth)}"/>
    </inertial>
  </link>

  <joint name="base_link" type="fixed">
    <origin xyz="${half_wheelbase} 0 ${wheel_radius}" rpy="0 0 0"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>

  <!-- Define wheels -->
  <xacro:wheel name="rl" x="${-half_wheelbase}" y="${half_track_width}" z="0" flip="1" />
  <xacro:wheel name="rr" x="${-half_wheelbase}" y="${-half_track_width}" z="0" flip="0" />
  <xacro:wheel name="fl" x="${half_wheelbase}" y="${half_track_width}" z="0" flip="1" />
  <xacro:wheel name="fr" x="${half_wheelbase}" y="${-half_track_width}" z="0" flip="0" />

  <xacro:property name="front_wheel_friction" value="1.75" />
  <xacro:property name="rear_wheel_friction" value="0.05" />

  <gazebo reference="base_link" >
    <mu1>0.5</mu1>
    <mu2>0.5</mu2>
  </gazebo>

  <gazebo reference="wheel_fl" >
    <mu1>${front_wheel_friction}</mu1>
    <mu2>${front_wheel_friction}</mu2>
  </gazebo>

  <gazebo reference="wheel_fr" >
    <mu1>${front_wheel_friction}</mu1>
    <mu2>${front_wheel_friction}</mu2>
  </gazebo>

  <gazebo reference="wheel_rl" >
    <mu1>${rear_wheel_friction}</mu1>
    <mu2>${rear_wheel_friction}</mu2>
  </gazebo>

  <gazebo reference="wheel_rr" >
    <mu1>${rear_wheel_friction}</mu1>
    <mu2>${rear_wheel_friction}</mu2>
  </gazebo>

  <!-- Vehicle controller -->
  <xacro:dd_controller name="mirv_controller" wheelbase="${2*half_wheelbase}" wheel_diameter="${2*wheel_radius}" left_joint="wheel_fl_joint" right_joint="wheel_fr_joint" />

  <!-- LiDAR Hokuyo ust10lx -->
  <xacro:sensor_hokuyo_ust10lx name="lidar" parent="base_link" color="black" visualize="true">
    <origin xyz="0.25 0 0.4" rpy="0 0 0"/>
  </xacro:sensor_hokuyo_ust10lx>
<!--  <xacro:sensor_hokuyo_ust10lx_gazebo name="lidar"/>-->

  <!-- Camera Orbbec Astra -->
  <xacro:sensor_orbbec_astra name="camera" parent="base_link" color="blue">
    <origin xyz="0 0 0.5" rpy="0 0 0" />
  </xacro:sensor_orbbec_astra>

  <!-- IMU -->
  <xacro:sensor_modified_imu name="imu" parent="base_link" color="red"
                  update_rate="10.0"
                  noise="0.005"
                  yaw_offset="0.0"
                  yaw_drift="0.02"
                  yaw_noise="0.01"
                  rate_offset="0.0 0.0 0.0"
                  rate_drift="0.002 0.002 0.002"
                  rate_noise="0.001 0.001 0.001"
                  accel_offset="0.0 0.0 0.0"
                  accel_drift="0.005 0.005 0.005"
                  accel_noise="0.005 0.005 0.005">
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </xacro:sensor_modified_imu>

  <!-- GPS w/ Variable Dropouts-->
  <xacro:sensor_standard_gps name="gps" parent="base_link" color="white"
                  ref_lat="40.1021496545"
                  ref_long="-88.2267974168"
                  ref_head="90.0"
                  update_rate="10.0"
                  drift="0.0"
                  noise="0.001"
                  vel_drift="0.00001"
                  vel_noise="0.00001">
    <origin xyz="-0.14 0 0.12" rpy="0 0 0"/>
  </xacro:sensor_standard_gps>
<!--  <xacro:sensor_standard_gps_gazebo name="gps" ref_lat="1" ref_long="2" ref_head="3" drift="4" vel_drift="5" noise="6" vel_noise="7" update_rate="8"/>-->

  <!-- Simple Simulated Battery -->
  <!-- <xacro:sensor_battery_approx/>-->

</robot>